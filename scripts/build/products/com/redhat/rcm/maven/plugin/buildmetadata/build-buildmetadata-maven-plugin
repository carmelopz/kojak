#!/usr/bin/python
# 
# Copyright (C) 2013 Red Hat Inc.
# Author: Salim Badakhchani <sal@redhat.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>. 
#
########################################################################

import koji
import re
import os
import sys
import time
import subprocess

SESSION = koji.ClientSession('http://koji.localdomain/kojihub', {})

SCM = 'git+'
URL = 'https://github.com/sbadakhc'
APP = 'buildmetadata-maven-plugin'
CHK = '7130058036a80c727810f0beb55488ee0ff7ba15'
SRC = '%s%s/%s.git#%s' % (SCM, URL, APP, CHK)
TAG = 'rcm-mw-tools'
BLD = 'rcm-mw-tools-build'
TGT = 'rcm-mw-tools-candidate'
PKG = 'com.redhat.rcm.maven.plugin-buildmetadata-maven-plugin'
VER = '1.3.1'
WRK = 'workspace'
BLOG = 'build.log'
OPT = '-Dmaven.test.skip=true'
TASKS = SESSION.listTasks()
TASK_ID = TASKS[-1]['id']
TASK = SESSION.getTaskInfo(TASK_ID, request=True)
STATE = TASK['state']
KOJI_CMD = 'koji'
SCM_CMD = 'git'
MVN_CMD = 'mvn'
LOG = os.path.join(os.getenv('HOME'),'%s/%s/%s') % (WRK, APP, BLOG)

# Function to run shell commands.
def run(CMD, fail=True):
    print CMD 
    ret = os.system(CMD)
    if ret != 0:
        print 'Error running command'
        if fail:
            sys.exit(1)
 
if ( not os.path.isfile(LOG)):
    os.chdir(os.path.join(os.getenv('HOME'),'%s/' % (WRK)))
    CMD = SCM_CMD + ' clone %s/%s' % (URL, APP)
    run(CMD)
    os.chdir(os.path.join(os.getenv('HOME'),'%s/%s' % (WRK, APP)))
    CMD = SCM_CMD + ' checkout %s-%s' % (APP, VER)
    run(CMD)
    CMD = MVN_CMD + ' clean install -C -B dependency:resolve-plugins %s | tee build.log' % (OPT)
    run(CMD)
    CMD = '/opt/kojak/scripts/build/mead-load-build-dependencies %s' % (LOG)
    run(CMD)
    subprocess.call(['koji', 'add-pkg', 'rcm-mw-tools', 'com.redhat.rcm.maven.plugin-buildmetadata-maven-plugin', '--owner', 'koji'])
    CMD = KOJI_CMD + ' maven-build %s %s %s' % (OPT, TGT, SRC)
    run(CMD)
else:
    CMD = KOJI_CMD + ' maven-build %s %s %s' % (OPT, TGT, SRC)
    run(CMD)


