#!/bin/bash
# 
# Copyright (C) 2013 Red Hat Inc.
# Author: Salim Badakhchani <sal@redhat.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>. 
#
########################################################################

# Uncomment to debug script
set -x

PRO="git+"
SCM="https://github.com/sbadakhc"
APP="buildmetadata-maven-plugin"
CHK="#ce68bfc08000ada70a3aa04d92d7c88271ac5b5e"
SRC="${PRO}${SCM}/${APP}.git${CHK}"
TAG="rcm-mw-tools"
PKG="com.redhat.rcm.maven.plugin-buildmetadata-maven-plugin"

build_src() {
    koji maven-build -Dmaven.test.skip=true --scratch ${TAG}-candidate $SRC
}

resolve_deps() {
    SCRIPTS="/opt/kojak/scripts/build/"
    WORKSPACE="$HOME/workspace/"
    TMP="$WORKSPACE/tmp"
    LOG="/mnt/koji/work/tasks/$TASK/$TASK/root.log"
    ERRORS=('Failed to execute goal' 'Non-resolvable parent POM' 'Non-resolvable import POM');
    FAULT="`for error in "${ERRORS[@]}"; do grep -e $error $LOG  | awk '{NF++;while(NF-->1)print $NF}' | grep "[0-9]$" | grep ':' ; done`"
    DEPS="`for dep in $(echo $FAULT | tr " " "\n"); do echo "$dep" ; done`"
    REPOS="--repo http://repository.jboss.org/nexus/content/groups/public \
        --repo https://repository.jboss.org/nexus/content/repositories/thirdparty-uploads \
        --repo=https://repository.jboss.org/nexus/service/local/staging/deploy/maven2 \
        --repo=https://repository.jboss.org/nexus/content/repositories/snapshots"
    COUNT=`echo "$DEPS" | wc -l`
    until [ "$COUNT" -eq 0 ]; do
        for dep in $DEPS; do
            if [ "$RES" == "$dep" ]; then
                echo "Dependency already imported"
                break
            else
                # Some house keeping.
                if [ -d "$TMP" ]; then
                    rm -rf $TMP
                    mkdir $TMP
                else
                    mkdir $TMP
                fi
                cd $TMP
                # Executes the modified version of these utility scripts specific to Kojak.
                $SCRIPTS/get-maven-artifacts $REPOS $dep
                $SCRIPTS/import-maven --tag ${TAG}-builddeps *
                cd $WORKSPACE
                rm -rf $TMP
                RES=$dep
                let COUNT-=1
            fi
        done
        break
    done
}

check_task() {
    echo "Monitoring tasks"
        while [[ true ]];do
        sleep 10
        TASK="`koji list-tasks --quiet | tail -n1 | awk '{ print $1 }'`"
            if [[ $TASK != [0-9]* ]]; then
                TASK="`cd /mnt/koji/work/tasks/  && ls -l | tail -1 | awk ' { print ( $(NF-0) ) }'`"
            fi
        TYPE="`koji taskinfo $TASK | grep  "Type:" | awk '{ print $NF }'`"
        STATE="`koji taskinfo $TASK | grep  "State:" | awk '{ print $NF }'`"
        STATUS="$TYPE $STATE"
            case  $STATUS  in  
                "buildMaven failed")    
                    echo "Status: $STATUS"
                    resolve_deps
                    build_src
                    ;;
                "buildMaven canceled")
                    echo "Status: $STATUS"
                    build_src
                    ;;    
                "buildMaven open")
                    echo "Status: $STATUS"
                    wait
                    ;;
                "buildMaven free")
                    echo "Status: $STATUS"
                    wait
                    ;;
                "buildMaven closed")
                    echo "Status: $STATUS"
                    read -s -n1 -p "`echo Status: $STATUS $'\n>> '`Press [RETURN] or [SPACE] to resubmit the task: `echo $'\n>> '`Press [CTRL-C] to exit:" KEY
                    if [ ${#KEY} -eq "0" ]; then
                        PROC=`koji list-tasks --quiet | tail -n1 | grep "+"`
                        if [ -z $PROC ]; then
                            echo -e "\n\nExiting build."
                            exit
                        else
                            build_src
                        fi
                    fi
                    ;;
                "newRepo open")
                    echo "Status: $STATUS"
                    wait
                    ;;
                "newRepo closed")
                    echo "Status: $STATUS"
                    build_src
                    ;;
                "newRepo free")
                    echo "Status: $STATUS"
                    wait
                    ;;
                "createrepo open")
                    echo "Status: $STATUS"
                    wait
                    ;;
                "createrepo closed")
                    echo "Status: $STATUS"
                    build_src
                    ;;
                "createrepo free")
                    echo "Status: $STATUS"
                    wait
                    ;;
                "tagBuild open")
                    echo "Status: $STATUS"
                    wait
                    ;;
                "tagBuild closed")
                    PROC=`koji list-tasks --quiet | tail -n2 | grep "FAILED"`
                    if [ -z "$PROC" ]; then
                        exit
                    else
                        build_src
                    fi
                    ;;
                # We can use this case to identify new cases.
                *)  echo "unknown status: $STATUS"             
                    exit
                    ;;
            esac 
        done
}

if [ -e "${HOME}/workspace/buildmetadata-maven-plugin/build.log" ]; then
    check_task
else
    cd ~/workspace
    git clone ${SCM}/${APP}.git
    cd ${APP}
    git checkout ${APP}-1.3.1
    mvn -B dependency:resolve-plugins clean install -Dmaven.test.skip=true >> build.log 2>&1
    koji add-pkg --owner=koji ${TAG}-candidate ${PKG}
    POMS=$(find ~/.m2/repository/ -name '*.pom'); for pom in $POMS; do /opt/kojak/scripts/build/import-maven $pom; done
    check_task
fi
