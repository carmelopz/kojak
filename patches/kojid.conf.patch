--- /etc/kojid/kojid.conf   2014-02-26 14:22:18.000000000 -0500
+++ /etc/kojid/kojid.conf   2014-04-07 16:17:42.124000014 -0400
@@ -3,7 +3,7 @@
 ; sleeptime=15

 ; The maximum number of jobs that kojid will handle at a time
-; maxjobs=10
+maxjobs=20

 ; The minimum amount of free space (in MBs) required for each build root
 ; minspace=8192
@@ -33,23 +33,24 @@
 ; mockhost=koji-linux-gnu

 ; The URL for the xmlrpc server
-server=http://hub.example.com/kojihub
+server=http://koji.localdomain/kojihub

 ; The URL for the file access
-topurl=http://hub.example.com/kojifiles
+topurl=http://koji.localdomain/kojifiles

 ; A space-separated list of hostname:repository[:use_common] tuples that kojid is authorized to checkout from (no quotes).
 ; Wildcards (as supported by fnmatch) are allowed.
 ; If use_common is specified and is one of "false", "no", "off", or "0" (without quotes), then kojid will not attempt to checkout
 ; a common/ dir when checking out sources from the source control system.  Otherwise, it will attempt to checkout a common/
 ; dir, and will raise an exception if it cannot.
-allowed_scms=scm.example.com:/cvs/example git.example.org:/example svn.example.org:/users/*:no
+;allowed_scms=scm.localdomain:/cvs/example git.example.org:/example svn.example.org:/users/*:no
+allowed_scms=koji.localdomain:/rpms/*:false:rhpkg,sources svn.apache.org:/repos/*:no git.app.eng.bos.redhat.com:*:false:rhpkg,sources git.engineering.redhat.com:*:false:rhpkg,sources github.com:*:false:rhpkg,sources forge.fusesource.com:*:false:rhpkg,sources

 ; The mail host to use for sending email notifications
-smtphost=example.com
+smtphost=koji.localdomain

 ; The From address used when sending email notifications
-from_addr=Koji Build System <buildsys@example.com>
+from_addr=Koji Build System <buildsys@localdomain>

 ;configuration for Kerberos authentication

@@ -66,10 +67,10 @@
 ;configuration for SSL authentication

 ;client certificate
-;cert = /etc/kojid/client.crt
+cert = /etc/pki/koji/kojibuilder1.pem

 ;certificate of the CA that issued the client certificate
-;ca = /etc/kojid/clientca.crt
+ca = /etc/pki/koji/koji_ca_cert.crt

 ;certificate of the CA that issued the HTTP server certificate
-;serverca = /etc/kojid/serverca.crt
+serverca = /etc/pki/koji/koji_ca_cert.crt
